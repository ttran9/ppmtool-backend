{"version":3,"sources":["Constants.js","actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/Algorithms/algorithms.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecuredRoutes.js","App.js","serviceWorker.js","index.js"],"names":["PROJECT_API_URL","concat","BACKLOG_API_URL","REGISTER_ENDPOINT","LOGIN_ENDPOINT","createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","Constants","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","getProjects","_ref2","_callee2","_context2","get","sent","_x2","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","propTypes","PropTypes","object","isRequired","func","state","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","console","log","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","fullName","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","newProps","setState","event","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_newProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlogId","projectTaskId","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","projectTask","UpdateProjectTask","createdAt","_this$props$match$par","getProjectTask","_newProps$project_tas","updatedProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","login","LoginRequest","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_token","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","Switch","exact","path","securityUtils_SecuredRoutes","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fb472de.chunk.js","sourcesContent":["export const DASHBOARD_URL = \"/dashboard\";\r\nexport const HOME_URL = \"/\";\r\nexport const REGISTER_URL = \"/register\";\r\nexport const LOGIN_URL = \"/login\";\r\nexport const LOGOUT_URL = \"/logout\";\r\nexport const PROJECTBOARD_URL = \"/projectBoard\";\r\nexport const API_URL = \"/api\";\r\nexport const USERS_URL = \"/users\";\r\nexport const PROJECT_API_URL = `${API_URL}/project`;\r\nexport const BACKLOG_API_URL = `${API_URL}/backlog`;\r\nexport const REGISTER_ENDPOINT = `${API_URL}${USERS_URL}${REGISTER_URL}`;\r\nexport const LOGIN_ENDPOINT = `${API_URL}${USERS_URL}${LOGIN_URL}`;\r\n\r\nexport const AUTHORIZATION_HEADER = \"Authorization\";\r\nexport const JWT_TOKEN = \"jwtToken\";\r\n\r\nexport const TO_DO_STATUS = \"TO_DO\";\r\nexport const IN_PROGRESS_STATUS = \"IN_PROGRESS\";\r\nexport const DONE_STATUS = \"DONE\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\nimport * as Constants from \"../Constants\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(`${Constants.PROJECT_API_URL}`, project);\r\n    // take us back to the dashboard if we succesfully create the project.\r\n    history.push(Constants.DASHBOARD_URL);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const response = await axios.get(`${Constants.PROJECT_API_URL}/all`);\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: response.data\r\n  });\r\n};\r\n\r\n// if we get any errors we will redirect to our dashboard so we need the history for this.\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const response = await axios.get(`${Constants.PROJECT_API_URL}/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: response.data\r\n    });\r\n  } catch (error) {\r\n    history.push(Constants.DASHBOARD_URL);\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`${Constants.PROJECT_API_URL}/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n// Types for users.\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\n// don't need to map state for this component.\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects(); // call the action.\r\n  }\r\n\r\n  render() {\r\n    const projects = this.props.project.projects;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\ngetProjects.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\nimport * as Constants from \"../Constants\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    // have a token present.\r\n    axios.defaults.headers.common[`${Constants.AUTHORIZATION_HEADER}`] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[`${Constants.AUTHORIZATION_HEADER}`];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport * as Constants from \"../Constants\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(`${Constants.REGISTER_ENDPOINT}`, newUser);\r\n    history.push(`${Constants.LOGIN_URL}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post login endpoint with LoginRequest payload object\r\n    const response = await axios.post(\r\n      `${Constants.LOGIN_ENDPOINT}`,\r\n      LoginRequest\r\n    );\r\n    // extract token from the response.data\r\n    const { token } = response.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(`${Constants.JWT_TOKEN}`, token);\r\n\r\n    // set our token in the header (Authorization: Bearer [token here])\r\n    setJWTToken(token);\r\n\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(`${Constants.JWT_TOKEN}`);\r\n  setJWTToken(false); // delete the Authorization header.\r\n  console.log(\r\n    \"deleted stuff!!! from localStorage and the authorization header\"\r\n  );\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Constants from \"../../Constants\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = `${Constants.HOME_URL}`;\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`${Constants.REGISTER_URL}`}>\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`${Constants.LOGIN_URL}`}>\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`${Constants.DASHBOARD_URL}`}>\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`${Constants.DASHBOARD_URL}`}>\r\n              <i className=\"fas fa-user-circle\">{user.fullName}</i>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to={`${Constants.LOGOUT_URL}`}\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to={`${Constants.HOME_URL}`}>\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n  logout: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    // set initial state for input fields.\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // a life cycle hook\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.errors) {\r\n      this.setState({\r\n        errors: newProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(event) {\r\n    // create a function to update the state later on.\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// note that \"propTypes\" is not the same as the import, \"PropTypes\"\r\nAddProject.propTypes = {\r\n  /*\r\n   * the below is similar to a constraint\r\n   * we are ensuring that the createProject action is required propType for this component to work properly.\r\n   */\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\n// first parameter is how we map the state to our props.\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      // get the errors from our server.\r\n      return action.payload;\r\n    default:\r\n      // just return the state as is (rare case).\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [], // array of objects\r\n  project: {} // single project item.\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {}, // user can be not logged in so this would be empty in that case\r\n  validToken: false // if the user has a valid token.\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload // everything we have in the claims.\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  // returns all the reducers\r\n\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nlet store;\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  // enhancer is the middleware we created.\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  // set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.errors) {\r\n      this.setState({\r\n        errors: newProps.errors\r\n      });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = newProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"is-invalid\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlogId, projectTaskId) {\r\n    this.props.deleteProjectTask(backlogId, projectTaskId);\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    } else if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    } else if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n          <button\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n            className=\"btn btn-danger ml-4\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import axios from \"axios\";\r\nimport * as Constants from \"../Constants\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlogId,\r\n  projectTask,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`${Constants.BACKLOG_API_URL}/${backlogId}`, projectTask);\r\n    history.push(`${Constants.PROJECTBOARD_URL}/${backlogId}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlogId => async dispatch => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${Constants.BACKLOG_API_URL}/${backlogId}`\r\n    );\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: response.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlogId,\r\n  projectTaskId,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${Constants.BACKLOG_API_URL}/${backlogId}/${projectTaskId}`\r\n    );\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: response.data\r\n    });\r\n  } catch (error) {\r\n    history.push(Constants.DASHBOARD_URL);\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlogId,\r\n  projectTaskId,\r\n  projectTask,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(\r\n      `${Constants.BACKLOG_API_URL}/${backlogId}/${projectTaskId}`,\r\n      projectTask\r\n    );\r\n    history.push(`${Constants.PROJECTBOARD_URL}/${backlogId}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (\r\n  backlogId,\r\n  projectTaskId\r\n) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${projectTaskId}, this action cannot be undone.`\r\n    )\r\n  ) {\r\n    await axios.delete(\r\n      `${Constants.BACKLOG_API_URL}/${backlogId}/${projectTaskId}`\r\n    );\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: projectTaskId // to be used in our reducer.\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\nimport * as Constants from \"../../Constants\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === Constants.TO_DO_STATUS) {\r\n        todoItems.push(tasks[i]);\r\n      } else if (\r\n        tasks[i].props.project_task.status === Constants.IN_PROGRESS_STATUS\r\n      ) {\r\n        inProgressItems.push(tasks[i]);\r\n      } else if (tasks[i].props.project_task.status === Constants.DONE_STATUS) {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks here.\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n            {\r\n              // <!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n              // <!-- SAMPLE PROJECT TASK ENDS HERE -->\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n            {\r\n              //  <!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n              //  <!-- SAMPLE PROJECT TASK ENDS HERE -->\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\nimport { boardAlgorithm } from \"./Algorithms/algorithms\";\r\n\r\nclass ProjectBoard extends Component {\r\n  // constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.errors) {\r\n      this.setState({\r\n        errors: newProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n    let BoardContent;\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React from \"react\";\r\nimport Backlog from \"../Backlog\";\r\n\r\nexport const boardAlgorithm = (errors, project_tasks) => {\r\n  if (project_tasks.length < 1) {\r\n    if (errors.projectNotFound) {\r\n      return (\r\n        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n          {errors.projectNotFound}\r\n        </div>\r\n      );\r\n    } else if (errors.projectIdentifier) {\r\n      return (\r\n        <div className=\"alert alert-info text-center\" role=\"alert\">\r\n          {errors.projectIdentifier}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"alert alert-info text-center\" role=\"alert\">\r\n          No Project Tasks on this board\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    return <Backlog project_tasks_prop={project_tasks} />;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"../../../Constants\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.errors) {\r\n      this.setState({\r\n        errors: newProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value={Constants.TO_DO_STATUS}>TO DO</option>\r\n                    <option value={Constants.IN_PROGRESS_STATUS}>\r\n                      IN PROGRESS\r\n                    </option>\r\n                    <option value={Constants.DONE_STATUS}>DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Constants from \"../../../Constants\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      createdAt: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlogId, projectTaskId } = this.props.match.params;\r\n    this.props.getProjectTask(backlogId, projectTaskId, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.errors) {\r\n      this.setState({\r\n        errors: newProps.errors\r\n      });\r\n    }\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      createdAt\r\n    } = newProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      createdAt\r\n    });\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const updatedProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      createdAt: this.state.createdAt\r\n    };\r\n\r\n    // console.log(updatedProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      updatedProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { backlogId } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`${Constants.PROJECTBOARD_URL}/${backlogId}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} + Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value={Constants.TO_DO_STATUS}>TO DO</option>\r\n                    <option value={Constants.IN_PROGRESS_STATUS}>\r\n                      IN PROGRESS\r\n                    </option>\r\n                    <option value={Constants.DONE_STATUS}>DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Constants from \"../../Constants\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(`${Constants.DASHBOARD_URL}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start you own\r\n                </p>\r\n                <hr />\r\n                <Link\r\n                  className=\"btn btn-lg btn-primary mr-2\"\r\n                  to={`${Constants.REGISTER_URL}`}\r\n                >\r\n                  Sign Up\r\n                </Link>\r\n                <Link\r\n                  className=\"btn btn-lg btn-secondary mr-2\"\r\n                  to={`${Constants.LOGIN_URL}`}\r\n                >\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport * as Constants from \"../../Constants\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(`${Constants.DASHBOARD_URL}`);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.errors) {\r\n      this.setState({\r\n        errors: newProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\nimport * as Constants from \"../../Constants\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(`${Constants.DASHBOARD_URL}`);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.security.validToken) {\r\n      this.props.history.push(`${Constants.DASHBOARD_URL}`);\r\n    }\r\n    if (newProps.errors) {\r\n      this.setState({\r\n        errors: newProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(user);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    // className=\"form-control form-control-lg\"\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    // className=\"form-control form-control-lg\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n  login: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as Constants from \"../Constants\";\r\n\r\n// otherProps will allow us to pass in anything else we may need.\r\nconst SecuredRoutes = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={`${Constants.LOGIN_URL}`} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoutes.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoutes);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport * as Constants from \"./Constants\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoutes from \"./securityUtils/SecuredRoutes\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWTToken(jwtToken);\r\n  const decoded_token = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_token\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded_token.exp < currentTime) {\r\n    // handle logout\r\n    store.dispatch(logout());\r\n    window.location.href = `${Constants.HOME_URL}`;\r\n  } else {\r\n    console.log(\"token not yet expired..\");\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            <Switch>\r\n              {\r\n                // Public Routes\r\n              }\r\n              <Route exact path={`${Constants.HOME_URL}`} component={Landing} />\r\n              <Route\r\n                exact\r\n                path={`${Constants.REGISTER_URL}`}\r\n                component={Register}\r\n              />\r\n              <Route exact path={`${Constants.LOGIN_URL}`} component={Login} />\r\n              {\r\n                // Private Routes\r\n              }\r\n              <SecuredRoutes\r\n                exact\r\n                path={`${Constants.DASHBOARD_URL}`}\r\n                component={Dashboard}\r\n              />\r\n              <SecuredRoutes exact path=\"/addProject\" component={AddProject} />\r\n              <SecuredRoutes\r\n                exact\r\n                path=\"/updateProject/:id\"\r\n                component={UpdateProject}\r\n              />\r\n              <SecuredRoutes\r\n                exact\r\n                path=\"/projectBoard/:id\"\r\n                component={ProjectBoard}\r\n              />\r\n              <SecuredRoutes\r\n                exact\r\n                path=\"/addProjectTask/:id\"\r\n                component={AddProjectTask}\r\n              />\r\n              <SecuredRoutes\r\n                exact\r\n                path=\"/updateProjectTask/:backlogId/:projectTaskId\"\r\n                component={UpdateProjectTask}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}